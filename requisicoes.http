@keyCloakUrl=http://localhost:7080/realms/quarkus/protocol/openid-connect/token
@baseUrl=http://localhost:8095

# Cria um usuário com a role user
# @name joaoAuth
POST {{keyCloakUrl}}
Content-Type: application/x-www-form-urlencoded
Authorization: Basic backend-service:secret

username=joao&password=1234&grant_type=password

###

# Cria um usuário com role manager
# @name joseAuth
POST {{keyCloakUrl}}
Content-Type: application/x-www-form-urlencoded
Authorization: Basic backend-service:secret

username=jose&password=1234&grant_type=password

###

# Cria um usuário com role propose-customer
# @name chinaAuth
POST {{keyCloakUrl}}
Content-Type: application/x-www-form-urlencoded
Authorization: Basic backend-service:secret

username=china&password=1234&grant_type=password

### Cria variáveis que armazenam tokens 
@userToken={{joaoAuth.response.body.$.access_token}}
@managerToken={{joseAuth.response.body.$.access_token}}
@proposalCustomerToken={{chinaAuth.response.body.$.access_token}}
###

# Cria uma proposta diretamente no microserviço de proposta para testar o alvo e testar a autenticação criada anteriormente (propose-customer)
# @name proposalResp
POST http://localhost:8091/api/proposal
Content-Type: application/json
Authorization: Bearer {{proposalCustomerToken}}

{
    "customer": "China Miner",
    "priceTonne": 125.25,
    "tonnes": 80,
    "country": "China",
    "proposalValidityDays": 3
}
###

# Cria uma proposta utilizando o gateway-bff propagando a autorização e autenticação

POST {{baseUrl}}/api/trade
Content-Type: application/json
Authorization: Bearer {{proposalCustomerToken}}

{
    "customer": "China Miner",
    "priceTonne": 125.25,
    "tonnes": 80,
    "country": "China",
    "proposalValidityDays": 3
}

###
@proposalId = 2
GET http://localhost:8091/api/proposal/{{proposalId}}
Authorization: Bearer {{userToken}}

###
# Utilizando a proposta criada anteriormente, faz a consulta dos detalhes utilizando o gateway
GET {{baseUrl}}/api/trade/{{proposalId}}
Authorization: Bearer {{userToken}}
###

# Utilizando a proposta criada anteriormente, faz a consulta dos detalhes utilizando o gateway com a autenticação de um manager
DELETE {{baseUrl}}/api/trade/remove/{{proposalId}}
Authorization: Bearer {{managerToken}}
###

GET http://localhost:8081/api/opportunity/report
Authorization: Bearer {{userToken}}
###
GET {{baseUrl}}/api/opportunity/data
Authorization: Bearer {{userToken}}

###
GET {{baseUrl}}/api/opportunity/report
Authorization: Bearer {{userToken}}